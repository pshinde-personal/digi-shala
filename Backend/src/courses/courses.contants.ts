import { IsArray, IsBoolean, IsDate, IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, IsUUID } from "class-validator";

export enum CourseStatus {
    DRAFT = 'draft',
    PUBLISHED = 'published',
    ARCHIVED = 'archived',
}

export enum CourseLevel {
    BEGINNER = 'beginner',
    INTERMEDIATE = 'intermediate',
    ADVANCED = 'advanced',
}

export interface Review {
    userId: string; // The ID of the user who wrote the review
    rating: number; // The numerical rating (e.g., 1-5 stars)
    comment: string; // The user's written feedback
    createdAt: Date; // When the review was submitted
}

export class SearchCoursesDto {
    @IsOptional()
    @IsUUID('all', { each: true })
    ids?: string[]; // Array of course IDs to filter by

    @IsOptional()
    @IsArray()
    @IsString({ each: true })
    tags?: string[]; // Array of tags to filter by

    @IsOptional()
    @IsArray()
    @IsString({ each: true })
    categories?: string[]; // Array of categories to filter by

    @IsOptional()
    @IsString()
    title?: string; // Text to search in the course title
}

export class CreateCourseDTO {
    @IsNotEmpty()
    @IsString()
    title: string; // The name of the course
    
    @IsNotEmpty()
    @IsString()
    description: string; // A detailed overview of the course content and objectives
    
    @IsNotEmpty()
    @IsNumber()
    price: number; // The cost of the course

    @IsNotEmpty()
    @IsUUID()
    instructorId: string; // The ID of the instructor who created the course
    
    @IsString()
    category: string; // The subject or area of study the course belongs to

    @IsNumber()
    duration: number; // The length of the course in hours, weeks, or months
    
    @IsEnum(CourseLevel)
    level: CourseLevel; // The difficulty level of the course

    @IsString()
    thumbnailUrl: string; // The URL of the course's thumbnail image
    
    @IsString()
    contentUrl: string; // The URL where the course content is hosted

    
    @IsString()
    requirements: string; // A list of prerequisites or skills needed to take the course
    
    @IsString()
    outcomes: string; // A description of what students will learn or be able to do after completing the course
    
    @IsString()
    syllabus: string; // A detailed outline of the course curriculum, including topics covered and learning activities
    
    @IsArray()
    @IsString({ each: true })
    tags: string[]; // Keywords or tags related to the course content

    @IsEnum(CourseStatus)
    status: CourseStatus; // The current status of the course

    @IsBoolean()
    certification: boolean; // Whether the course offers a certificate upon completion
    
    @IsBoolean()
    featured: boolean; // Whether the course is highlighted as a featured course
    
    @IsNumber()
    discount: number; // The percentage discount applied to the course price

    @IsDate()
    startDate: Date; // The start date of the course
    
    @IsDate()
    endDate: Date; // The end date of the course
    
    @IsString()
    language: string; // The language in which the course is taught

    //  other fields will be generated by system
}

export interface DeleteCourseDTO {
    id: string; // The ID of the course to be deleted
}

export class UpdateCourseDTO {
    @IsOptional()
    @IsString()
    title?: string; // The name of the course

    @IsOptional()
    @IsString()
    description?: string; // A detailed overview of the course content and objectives

    @IsOptional()
    @IsNumber()
    price?: number; // The cost of the course

    @IsOptional()
    @IsUUID()
    instructorId?: string; // The ID of the instructor who created the course

    @IsOptional()
    @IsString()
    category?: string; // The subject or area of study the course belongs to

    @IsOptional()
    @IsNumber()
    duration?: number; // The length of the course in hours, weeks, or months

    @IsOptional()
    @IsEnum(CourseLevel)
    level?: CourseLevel; // The difficulty level of the course

    @IsOptional()
    @IsString()
    thumbnailUrl?: string; // The URL of the course's thumbnail image

    @IsOptional()
    @IsString()
    contentUrl?: string; // The URL where the course content is hosted

    @IsOptional()
    @IsString()
    requirements?: string; // A list of prerequisites or skills needed to take the course

    @IsOptional()
    @IsString()
    outcomes?: string; // A description of what students will learn or be able to do after completing the course

    @IsOptional()
    @IsString()
    syllabus?: string; // A detailed outline of the course curriculum, including topics covered and learning activities

    @IsOptional()
    @IsArray()
    @IsString({ each: true })
    tags?: string[]; // Keywords or tags related to the course content

    @IsOptional()
    @IsEnum(CourseStatus)
    status?: CourseStatus; // The current status of the course

    @IsOptional()
    @IsBoolean()
    certification?: boolean; // Whether the course offers a certificate upon completion

    @IsOptional()
    @IsBoolean()
    featured?: boolean; // Whether the course is highlighted as a featured course

    @IsOptional()
    @IsNumber()
    discount?: number; // The percentage discount applied to the course price

    @IsOptional()
    @IsDate()
    startDate?: Date; // The start date of the course

    @IsOptional()
    @IsDate()
    endDate?: Date; // The end date of the course

    @IsOptional()
    @IsString()
    language?: string; // The language in which the course is taught
}
